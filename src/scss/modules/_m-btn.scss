// Base px
$base-px-default: 16px !default;

// Circle
$circle-size-default: $base-px-default !default;
$circle-color-default: inherit !default;
$circle-border-width-default: null !default;
$circle-border-color-default: #222222 !default;
$circle-display-default: inline-block !default;
// Position
$position-default: null !default;
// Tint/Shade
$mix-percent-default: 15% !default;

// Sizing
// ------
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

// Advanced positioning
// --------------------
@mixin position($type,
								$top: $position-default,
								$right: $position-default,
								$bottom: $position-default,
								$left: $position-default) {
  position: $type;
  $allowed_types: absolute relative fixed;
  @if not index($allowed_types, $type) {
    @warn "Unknown position: #{$type}.";
  }
  @each $data in top $top, right $right, bottom $bottom, left $left {
    #{nth($data, 1)}: nth($data, 2);
  }
}
@mixin absolute($top: $position-default, $right: $position-default, $bottom: $position-default, $left: $position-default) {
  @include position(absolute, $top, $right, $bottom, $left);
}

// ----------------------------------
// Functions
// ----------------------------------

// Mix white with another color
// ----------------------------
@function tint($color, $percent: $mix-percent-default){
  @return mix(white, $color, $percent);
}

// Mix black with another color
// ----------------------------
@function shade($color, $percent: $mix-percent-default){
  @return mix(black, $color, $percent);
}

// Create a random color
// ---------------------
@function random-color($min: 0, $max: 255, $alpha: 1) {
  @if $min < 0 {
    $min: -1;
  } @else {
    $min: $min - 1;
  }
  @if $max > 255 {
    $max: 256;
  } @else {
    $max: $max + 1;
  }
  $red: random($max) + $min;
  $green: random($max) + $min;
  $blue: random($max) + $min;
  @return rgba($red, $green, $blue, $alpha);
}

$btn-width: 250px !default;
$btn-height: 80px !default;
$btn-full: $btn-height+$btn-width !default;
$btn-half: $btn-full/2 !default;
$bg-color: #eeeeee !default;

.m-btn {
  color: #ffffff;
  border: 0;
  font-weight: 600;
  cursor: pointer;

  &.main {
    padding: 20px 60px;
    $btn-color: #411997;
    $btn-color-dark: shade($btn-color, 40%);
    color: #fff;
    background: #411997;
    z-index: 9999;
    position: relative;
    text-decoration: none;
    overflow: hidden;
  }



  &.getEstimation {
    padding: 12px 15px;
    background: #411997;
    box-shadow: 0 1px 7px 0 rgba(50, 0, 126, 0.26);
    margin-left: 15px;
    z-index: 9999;
    position: relative;
    text-decoration: none;
    overflow: hidden;
  }

  &.animate {
    span {
      position: absolute;
      display: block;
      width: 0;
      height: 0;
      border-radius: 50%;
      background-color: #32007e;
      transition: width 0.4s ease-in-out, height 0.4s ease-in-out;
      transform: translate(-50%, -50%);
      z-index: -1;
    }

    .xs & {
      padding: 13px 23px;
      min-width: 194px;
    }

    &:hover {
      text-decoration: none!important;

      span {
        @include size(225%, $btn-width*2.25);
      }
    }

    &:active {
      text-decoration: none!important;

      span {
        @include size(225%, $btn-width*2.25);
        background-color: #563dd1;
      }
    }
  }
}
